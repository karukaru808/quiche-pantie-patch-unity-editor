name: Unity Export unitypackage

on:
  push:
    tags:
      - 'v*'

jobs:
  createUnityPackageJob:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2018.4.20f1]
    env:
      UNITY_PATH: /opt/Unity/Editor/Unity
      BATCHMODE_ARGS: -quit -batchmode -nographics -silent-crashes -logFile
      PACKAGE_NAME: QuichePantiePatchEditor_v${{ github.ref }}.unitypackage

    steps:
    - uses: actions/checkout@master
    - name: Decode Secret Unity Licence File
      run: >
        openssl aes-256-cbc -d -in Unity_v2018.x.ulf-cipher
        -k ${CYPHER_KEY}
        >> /Unity_v2018.x.ulf
      env:
        CYPHER_KEY: ${{ secrets.cypherkey }}
    - name: Activate Unity
      run: >
        ${UNITY_PATH}
        ${BATCHMODE_ARGS}
        -manualLicenseFile /Unity_v2018.x.ulf
        || exit 0
    - name: Export UnityPackage
      run: >
        ${UNITY_PATH}
        ${BATCHMODE_ARGS}
        -exportPackage ${EXPORT_PACKAGES} ${PACKAGE_NAME}
        -projectPath $GITHUB_WORKSPACE
      env:
        EXPORT_PACKAGES: Assets/AliceLaboratory/Editor
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release Quiche Pantie Patch Editor ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${PACKAGE_NAME}
        asset_name: ${PACKAGE_NAME}
        asset_content_type: application/zip
        